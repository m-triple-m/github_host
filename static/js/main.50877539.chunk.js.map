{"version":3,"sources":["config.js","components/sidebar.js","components/admin/index.js","components/admin/dashboard.js","components/admin/manageUser.js","components/profile.js","components/crud.js","components/main/index.js","components/brand.js","components/main/login.js","components/main/signup.js","components/manage.js","components/user/index.js","components/user/addBlog.js","components/usingScene.js","App.js","index.js"],"names":["app_config","api_url","drawerWidth","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","display","alignItems","justifyContent","padding","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","Sidebar","children","sidebarOptions","title","useTheme","useState","setOpen","url","userMenuPos","setUserMenuPos","userMenuOpen","Boolean","navigate","useNavigate","Box","sx","CssBaseline","position","Toolbar","mr","IconButton","color","onClick","edge","marginRight","Typography","variant","noWrap","component","flexGrow","e","currentTarget","p","Avatar","alt","src","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","direction","ChevronRight","ChevronLeft","Divider","List","map","name","icon","link","ListItemButton","minHeight","px","ListItemIcon","minWidth","ListItemText","primary","opacity","Admin","AccountCircle","AccountBox","AdminDashboard","ManageUser","userList","setUserList","loading","setLoading","menuPos","setMenuPos","fetchData","fetch","then","res","json","data","console","table","useEffect","Container","Card","CardContent","index","created","email","isAdmin","password","username","_id","Accordion","AccordionSummary","expandIcon","ExpandMoreSharp","fontWeight","AccordionDetails","Date","toLocaleDateString","method","body","JSON","stringify","headers","log","status","toast","promise","success","error","Fab","background","Delete","displayData","Profile","height","className","Grid","container","item","md","xs","TextField","label","Crud","dataList","setDataList","initialValues","text","onSubmit","formdata","isSubmitting","setSubmitting","resetForm","values","handleChange","handleSubmit","sm","value","onChange","LoadingButton","type","loadingPosition","startIcon","obj","Button","Main","Brand","dark","size","fontFamily","textAlign","margin","Login","CustomTextField","borderBottomColor","borderColor","style","backgroundSize","maxWidth","Swal","fire","admin","placeholder","Checkbox","borderRadius","textDecoration","marginTop","Signup","passVisible","setPassVisible","validationSchema","Yup","shape","min","max","required","confirm","oneOf","Paper","backgroundColor","fontSize","align","reqOptions","errors","touched","helperText","InputProps","endAdornment","InputAdornment","Visibility","VisibilityOff","Manage","bringToTop","focus","motion","div","Skeleton","whileHover","scale","variants","User","AddBlog","CardMedia","author","description","tags","thumbnail","UsingScene","keyframes","i","transform","options","delay","fillMode","direcition","iterationCount","playSpeed","time","css","autoplay","ready","onPlay","onPaused","onAnimate","onTimeUpdate","onIteration","onEnded","App","theme1","createTheme","palette","ThemeProvider","element","path","to","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50877539.chunk.js","sourcesContent":["const app_config = {\r\n  api_url: \"http://localhost:5000\",\r\n  // api_url: \"http://192.168.191.91:5000\",\r\n};\r\n\r\nexport default app_config;\r\n","import { ChevronLeft, ChevronRight, Inbox } from \"@mui/icons-material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport MuiDrawer from \"@mui/material/Drawer\";\r\nimport MuiAppBar from \"@mui/material/AppBar\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  CssBaseline,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport app_config from \"../config\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: `calc(${theme.spacing(8)} + 1px)`,\r\n  },\r\n});\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-end\",\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n}));\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create([\"width\", \"margin\"], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: \"nowrap\",\r\n  boxSizing: \"border-box\",\r\n  ...(open && {\r\n    ...openedMixin(theme),\r\n    \"& .MuiDrawer-paper\": openedMixin(theme),\r\n  }),\r\n  ...(!open && {\r\n    ...closedMixin(theme),\r\n    \"& .MuiDrawer-paper\": closedMixin(theme),\r\n  }),\r\n}));\r\n\r\nexport default function Sidebar({ children, sidebarOptions, title }) {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(true);\r\n  const url = app_config.api_url;\r\n\r\n  const [userMenuPos, setUserMenuPos] = useState(null);\r\n  const userMenuOpen = Boolean(userMenuPos);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" open={open}>\r\n        <Toolbar sx={{ mr: 2 }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            sx={{\r\n              marginRight: 5,\r\n              ...(open && { display: \"none\" }),\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap component=\"div\" sx={{ flexGrow: 1 }}>\r\n            {title}\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <IconButton\r\n              onClick={(e) => setUserMenuPos(e.currentTarget)}\r\n              sx={{ p: 0 }}\r\n            >\r\n              <Avatar alt=\"Remy Sharp\" src={url + \"/images/ada.jpg\"} />\r\n            </IconButton>\r\n          </Box>\r\n          <Menu\r\n            sx={{ mt: \"45px\" }}\r\n            id=\"menu-appbar\"\r\n            anchorEl={userMenuPos}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            open={userMenuOpen}\r\n            onClose={(e) => setUserMenuPos(null)}\r\n          >\r\n            <MenuItem>Profile</MenuItem>\r\n            <MenuItem>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer variant=\"permanent\" open={open}>\r\n        <DrawerHeader>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? <ChevronRight /> : <ChevronLeft />}\r\n          </IconButton>\r\n        </DrawerHeader>\r\n        <Divider />\r\n        <List>\r\n          {sidebarOptions.map(({ name, icon, link }) => (\r\n            <ListItemButton\r\n              onClick={(e) => navigate(link)}\r\n              key={name}\r\n              sx={{\r\n                minHeight: 48,\r\n                justifyContent: open ? \"initial\" : \"center\",\r\n                px: 2.5,\r\n              }}\r\n            >\r\n              <ListItemIcon\r\n                sx={{\r\n                  minWidth: 0,\r\n                  mr: open ? 3 : \"auto\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                {icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={name} sx={{ opacity: open ? 1 : 0 }} />\r\n            </ListItemButton>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n        <DrawerHeader />\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Outlet } from \"react-router-dom\";\r\nimport { AccountBox, AccountCircle } from \"@mui/icons-material\";\r\nimport Sidebar from \"../sidebar\";\r\n\r\nconst Admin = () => {\r\n  const sidebarOptions = [\r\n    {\r\n      name: \"Profile\",\r\n      icon: <AccountCircle />,\r\n      link: \"/admin/profile\",\r\n    },\r\n    {\r\n      name: \"Manage Users\",\r\n      icon: <AccountBox />,\r\n      link: \"/admin/manageuser\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Sidebar sidebarOptions={sidebarOptions} title=\"Admin Dashboard\">\r\n        <Outlet />\r\n      </Sidebar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import { Outlet } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n  return <Outlet></Outlet>;\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import { Delete, Edit, ExpandMore, ExpandMoreSharp } from \"@mui/icons-material\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Fab,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport app_config from \"../../config\";\r\n\r\nconst ManageUser = () => {\r\n  const url = app_config.api_url;\r\n  const [userList, setUserList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [menuPos, setMenuPos] = useState(null);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const fetchData = () => {\r\n    fetch(url + \"/user/getall\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.table(data);\r\n        setUserList(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const deleteData = (id) => {\r\n    toast.promise(\r\n      fetch(url + \"/user/delete/\" + id, {\r\n        method: \"DELETE\",\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            fetchData();\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n        }),\r\n      {\r\n        loading: \"Deleting User...\",\r\n        success: <b>User Deleted!</b>,\r\n        error: <b>Some Error Occured!</b>,\r\n      }\r\n    );\r\n  };\r\n\r\n  const updateUser = (id, data) => {\r\n    fetch(url + \"/user/update/\" + id, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      fetchData();\r\n      console.log(res.status);\r\n    });\r\n  };\r\n\r\n  const displayData = () => {\r\n    if (!loading) {\r\n      return userList.map(\r\n        ({ created, email, isAdmin, password, username, _id }, index) => (\r\n          <Accordion key={_id}>\r\n            <AccordionSummary expandIcon={<ExpandMoreSharp />}>\r\n              <Typography fontWeight={600}>{username}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <h5>Username : {username}</h5>\r\n              <h5>Email : {email}</h5>\r\n              <h5>Password : {password}</h5>\r\n              <h5>isAdmin : {isAdmin ? \"yes\" : \"no\"}</h5>\r\n              <h5>Created At : {new Date(created).toLocaleDateString()}</h5>\r\n\r\n              <Menu\r\n                anchorEl={menuPos}\r\n                open={Boolean(menuPos)}\r\n                onClose={(e) => setMenuPos(null)}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n              >\r\n                <MenuItem>Profile</MenuItem>\r\n                <MenuItem\r\n                  onClick={(e) => updateUser(_id, { isAdmin: !isAdmin })}\r\n                >\r\n                  {!isAdmin ? \"Make Admin\" : \"Make User\"}\r\n                </MenuItem>\r\n                <MenuItem onClick={(e) => deleteData(_id)}>Delete</MenuItem>\r\n              </Menu>\r\n              <Fab\r\n                onClick={(e) => setMenuPos(e.currentTarget)}\r\n                variant=\"extended\"\r\n                sx={{ background: \"red\", color: \"white\" }}\r\n              >\r\n                <Delete /> Delete\r\n              </Fab>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Toaster />\r\n\r\n      <Card>\r\n        <CardContent>{displayData()}</CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageUser;\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport app_config from \"../config\";\r\n\r\nconst Profile = () => {\r\n  const url = app_config.api_url;\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <CardContent>\r\n          <Box component=\"div\" sx={{ height: 200, display: \"flex\" }}>\r\n            <img src={url + \"/images/ada.jpg\"} alt=\"Ada\" />\r\n            <Typography variant=\"h3\"></Typography>\r\n          </Box>\r\n\r\n          <form className=\"mt-5\">\r\n            <Grid container spacing={10} className=\"mt-4 w-100\">\r\n              <Grid item md={6} xs={12}>\r\n                <TextField label=\"Name\" variant=\"outlined\" />\r\n              </Grid>\r\n              <Grid item md={6} xs={12}>\r\n                <TextField label=\"Name\" variant=\"outlined\" />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={10} className=\"mt-4 w-100\">\r\n              <Grid item md={6} xs={12}>\r\n                <TextField label=\"Name\" variant=\"outlined\" />\r\n              </Grid>\r\n              <Grid item md={6} xs={12}>\r\n                <TextField label=\"Name\" variant=\"outlined\" />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={10} className=\"mt-4 w-100\">\r\n              <Grid item md={6} xs={12}>\r\n                <TextField label=\"Name\" variant=\"outlined\" />\r\n              </Grid>\r\n              <Grid item md={6} xs={12}>\r\n                <TextField label=\"Name\" variant=\"outlined\" />\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport { useEffect, useState } from \"react\";\r\nimport app_config from \"../config\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nconst Crud = () => {\r\n  const url = app_config.api_url;\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchData = () => {\r\n    fetch(url + \"/crud/getall\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.table(data);\r\n        setDataList(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const saveData = (formdata, { isSubmitting, setSubmitting, resetForm }) => {\r\n    setSubmitting(true);\r\n    fetch(url + \"/crud/add\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formdata),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          fetchData();\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n  const deleteData = (id) => {\r\n    toast.promise(\r\n      fetch(url + \"/crud/delete/\" + id, {\r\n        method: \"DELETE\",\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            fetchData();\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n        }),\r\n      {\r\n        loading: \"Saving...\",\r\n        success: <b>Item Deleted!</b>,\r\n        error: <b>Some Error Occured!</b>,\r\n      }\r\n    );\r\n  };\r\n\r\n  const notify = (cb) => {\r\n    toast.promise(cb(), {\r\n      loading: \"Saving...\",\r\n      success: <b>Settings saved!</b>,\r\n      error: <b>Could not save.</b>,\r\n    });\r\n  };\r\n\r\n  const formObj = {\r\n    title: \"\",\r\n    text: \"\",\r\n  };\r\n\r\n  const displayData = () => {\r\n    if (!loading) {\r\n      return dataList.map((obj, index) => (\r\n        <tr key={obj._id}>\r\n          <td>{obj.title}</td>\r\n          <td>{obj.text}</td>\r\n          <td>{new Date(obj.created).toLocaleDateString()}</td>\r\n          <td>\r\n            <Button\r\n              onClick={(e) => deleteData(obj._id)}\r\n              variant=\"contained\"\r\n              color=\"error\"\r\n            >\r\n              <DeleteIcon />\r\n            </Button>\r\n          </td>\r\n          <td>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              <EditIcon />\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      ));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Toaster />\r\n      <h1>Crud App</h1>\r\n      <Formik initialValues={formObj} onSubmit={saveData}>\r\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Card>\r\n              <CardContent>\r\n                <Grid container spacing={2}>\r\n                  <Grid item sm={5} xs={12}>\r\n                    <TextField\r\n                      label=\"Title\"\r\n                      id=\"title\"\r\n                      value={values.title}\r\n                      onChange={handleChange}\r\n                      className=\"w-100\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={5} xs={12}>\r\n                    <TextField\r\n                      label=\"Text\"\r\n                      id=\"text\"\r\n                      value={values.text}\r\n                      onChange={handleChange}\r\n                      className=\"w-100\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={2} xs={12}>\r\n                    <LoadingButton\r\n                      className=\"w-100 h-100\"\r\n                      type=\"submit\"\r\n                      loading={isSubmitting}\r\n                      loadingPosition=\"start\"\r\n                      startIcon={<SaveIcon />}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Save\r\n                    </LoadingButton>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <table className=\"table table-dark mt-5\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Text</th>\r\n            <th>Added</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{displayData()}</tbody>\r\n      </table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Crud;\r\n","import { Outlet } from \"react-router-dom\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div>\r\n      {/* <Header></Header> */}\r\n      <Outlet />\r\n      {/* <Footer></Footer> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst Brand = ({ dark, children }) => {\r\n  return (\r\n    <Typography\r\n      variant=\"h3\"\r\n      sx={{\r\n        color: \"black\",\r\n        size: \"2em\",\r\n        fontFamily: \"Caveat\",\r\n        textAlign: \"center\",\r\n        fontWeight: \"900\",\r\n        margin: \"2rem 0\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Brand;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  styled,\r\n  TextField,\r\n  Typography,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport app_config from \"../../config\";\r\nimport Brand from \"../brand\";\r\nimport { Formik } from \"formik\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Login = () => {\r\n  const CustomTextField = styled(TextField)({\r\n    \"& label.Mui-focused\": {\r\n      color: \"#4d0fe9\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#4d0fe9\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#4d0fe9\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#4d0fe9\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#4d0fe9\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const url = app_config.api_url;\r\n  const navigate = useNavigate();\r\n\r\n  const loginForm = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const loginSubmit = (formdata) => {\r\n    // console.log(formdata);\r\n    fetch(url + \"/user/check-login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formdata),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Loggedin Successfully\",\r\n          }).then(() => {\r\n            res.json().then((data) => {\r\n              if (data.admin) {\r\n                navigate(\"/admin\");\r\n              } else {\r\n                navigate(\"/user\");\r\n              }\r\n            });\r\n          });\r\n        } else if (res.status === 400) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"OOOps!!\",\r\n            text: \"Login failed\",\r\n          });\r\n        }\r\n      })\r\n      .then((data) => console.log(data));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: \"url(\" + url + \"/images/login_back.png) no-repeat\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"xs\"\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Card\r\n          sx={{\r\n            background: \"url(\" + url + \"/images/login_card_back.jpg) no-repeat\",\r\n          }}\r\n        >\r\n          <CardContent sx={{ padding: \"2rem\" }}>\r\n            <Brand>Brand Name</Brand>\r\n            <h4 className=\"mt-4 text-center\">Login Here</h4>\r\n\r\n            <Formik initialValues={loginForm} onSubmit={loginSubmit}>\r\n              {({ values, handleSubmit, handleChange }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <CustomTextField\r\n                    variant=\"standard\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    placeholder=\"your email here\"\r\n                    className=\"w-100 mt-4\"\r\n                    id=\"email\"\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                  />\r\n                  <CustomTextField\r\n                    variant=\"standard\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    placeholder=\"your password here\"\r\n                    className=\"w-100 mt-4\"\r\n                    id=\"password\"\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                  />\r\n\r\n                  <Checkbox />\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className=\"w-100 mt-5\"\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                      background: \"linear-gradient(to right, #5b4bff ,#fb8dff)\",\r\n                      borderRadius: \"100px\",\r\n                      fontWeight: \"700\",\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n\r\n            <p>Forgot Password?</p>\r\n            <Typography\r\n              sx={{\r\n                color: \"gray\",\r\n                textAlign: \"center\",\r\n                textDecoration: \"none\",\r\n                marginTop: \"10rem\",\r\n              }}\r\n              onClick={(e) => navigate(\"/main/signup\")}\r\n            >\r\n              Create your Account\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { AccountCircle, Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport app_config from \"../../config\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n  const [passVisible, setPassVisible] = useState(false);\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const formdata = {\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\",\r\n  };\r\n\r\n  const url = app_config.api_url;\r\n\r\n  const formSubmit = (formdata) => {\r\n    console.log(formdata);\r\n\r\n    const reqOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formdata),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    fetch(url + \"/user/add\", reqOptions).then((res) => {\r\n      console.log(res.status);\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Success!!\",\r\n        text: \"Register Successfull\",\r\n      }).then(() => {\r\n        navigate(\"/main/login\");\r\n      });\r\n      res.json();\r\n    });\r\n  };\r\n\r\n  const layout = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"90vh\",\r\n    backgroundColor: \"#cf9bff\",\r\n  };\r\n\r\n  const brandName = (name) => {\r\n    return (\r\n      <p\r\n        style={{\r\n          color: \"#555555\",\r\n          fontWeight: 700,\r\n          fontSize: \"2rem\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {name}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.name) {\r\n      errors.email = \"Required\";\r\n    }\r\n\r\n    if (!values.username) {\r\n      errors.username = \"Required\";\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = \"Required\";\r\n    }\r\n\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n\r\n    if (values.confirm !== values.password) {\r\n      errors.confirm = \"Please Re-Enter correct Password\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const validateConfirmPassword = (pass, value) => {\r\n    let error = \"\";\r\n    if (pass && value) {\r\n      if (pass !== value) {\r\n        error = \"Password not matched\";\r\n      }\r\n    }\r\n    return error;\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"FullName is Required\"),\r\n    username: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Username is Required\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is Required\"),\r\n    password: Yup.string()\r\n      // .matches(\r\n      //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\r\n      //   \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\r\n      // )\r\n      .required(\"Password is Required\"),\r\n    confirm: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Password Confirmation is Required\"),\r\n  });\r\n\r\n  const uploadAvatar = (e) => {\r\n    const file = e.target.files[0];\r\n    fetch(url + \"/util/uploadfile\", {\r\n      method: \"POST\",\r\n      body: new FormData(\"myfile\", file),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper style={layout}>\r\n      <Container maxWidth=\"sm\">\r\n        <Card>\r\n          <CardContent>\r\n            {brandName(\"My Brand Name\")}\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Join Now\r\n            </Typography>\r\n            <Formik\r\n              initialValues={formdata}\r\n              onSubmit={formSubmit}\r\n              // validate={validate}\r\n              validationSchema={validationSchema}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleChange,\r\n                errors,\r\n                touched,\r\n                resetForm,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Grid container spacing={5}>\r\n                    <Grid item md={12} sm={12} xs={12} className=\"mt-5\">\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        className=\"w-100\"\r\n                        error={Boolean(errors.name)}\r\n                        helperText={errors.name}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={5}>\r\n                    <Grid item md={6} sm={12} xs={12} className=\"mt-3\">\r\n                      <TextField\r\n                        label=\"Username\"\r\n                        id=\"username\"\r\n                        value={values.username}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        className=\"w-100\"\r\n                        error={Boolean(errors.username)}\r\n                        helperText={errors.username}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} sm={12} xs={12} className=\"mt-3\">\r\n                      <TextField\r\n                        label=\"Email ID\"\r\n                        id=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        type=\"email\"\r\n                        variant=\"outlined\"\r\n                        className=\"w-100\"\r\n                        error={Boolean(errors.email)}\r\n                        helperText={errors.email}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={5}>\r\n                    <Grid item md={6} sm={12} xs={12} className=\"mt-3\">\r\n                      <TextField\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        type={passVisible ? \"text\" : \"password\"}\r\n                        variant=\"outlined\"\r\n                        className=\"w-100\"\r\n                        error={Boolean(errors.password)}\r\n                        helperText={errors.password}\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={(e) => {\r\n                                  setPassVisible(!passVisible);\r\n                                }}\r\n                                edge=\"end\"\r\n                              >\r\n                                {passVisible ? (\r\n                                  <Visibility />\r\n                                ) : (\r\n                                  <VisibilityOff />\r\n                                )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} sm={12} xs={12} className=\"mt-3\">\r\n                      <TextField\r\n                        label=\"Re-Enter Password\"\r\n                        id=\"confirm\"\r\n                        value={values.confirm}\r\n                        onChange={handleChange}\r\n                        type={passVisible ? \"text\" : \"password\"}\r\n                        variant=\"outlined\"\r\n                        className=\"w-100\"\r\n                        error={Boolean(errors.confirm)}\r\n                        helperText={errors.confirm}\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={(e) => {\r\n                                  setPassVisible(!passVisible);\r\n                                }}\r\n                                edge=\"end\"\r\n                              >\r\n                                {passVisible ? (\r\n                                  <Visibility />\r\n                                ) : (\r\n                                  <VisibilityOff />\r\n                                )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"w-100 mt-5\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Skeleton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport app_config from \"../config\";\r\nimport \"./manage.css\";\r\n\r\nconst Manage = () => {\r\n  const url = app_config.api_url;\r\n  const [dataList, setDataList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchData = () => {\r\n    fetch(url + \"/crud/getall\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setDataList(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const showLoading = () => {\r\n    return (\r\n      <div className=\"myrow\">\r\n        {[1, 2, 3, 4].map((item) => (\r\n          <motion.div className=\"mycard\">\r\n            <div className=\"mycard-body\">\r\n              <Skeleton variant=\"rectangular\" width={200} height={50} />\r\n              <Skeleton\r\n                variant=\"rectangular\"\r\n                style={{ marginTop: \"10px\" }}\r\n                width={200}\r\n                height={20}\r\n              />\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const bringToTop = {\r\n    focus: {\r\n      borderRadius: \"1.5rem\",\r\n      width: \"50%\",\r\n    },\r\n  };\r\n\r\n  const displayData = () => {\r\n    if (!loading)\r\n      return dataList.map((item) => (\r\n        <motion.div className=\"mycard\" whileHover={{ scale: 1.05 }} variants={bringToTop}>\r\n          <div className=\"mycard-body\">\r\n            <Typography variant=\"h4\" component=\"div\">\r\n              {item.title}\r\n            </Typography>\r\n            <Typography variant=\"p\" component=\"div\">\r\n              {item.text}\r\n            </Typography>\r\n          </div>\r\n        </motion.div>\r\n      ));\r\n    else return showLoading();\r\n  };\r\n\r\n  return (\r\n    <div className=\"manage-back\">\r\n      <Container>\r\n        <h1 className=\"text-center\">Manager</h1>\r\n        <hr />\r\n        <div className=\"myrow\">{displayData()}</div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Manage;\r\n","import { AccountBox, AccountCircle } from \"@mui/icons-material\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport Sidebar from \"../sidebar\";\r\n\r\nconst User = () => {\r\n  const sidebarOptions = [\r\n    {\r\n      name: \"Profile\",\r\n      icon: <AccountCircle />,\r\n      link: \"/user/profile\",\r\n    },\r\n    {\r\n      name: \"Manage Users\",\r\n      icon: <AccountBox />,\r\n      link: \"/user/manageuser\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Sidebar sidebarOptions={sidebarOptions} title=\"User Dashboard\">\r\n        <Outlet />\r\n      </Sidebar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Container,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport React from \"react\";\r\n\r\nconst AddBlog = () => {\r\n  const blogForm = {\r\n    author: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    tags: \"\",\r\n    thumbnail: \"\",\r\n    data: {},\r\n  };\r\n\r\n  const submitBlog = (formdata) => {\r\n    console.log(formdata);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <CardContent>\r\n          <CardMedia />\r\n          <Formik initialValues={blogForm} onSubmit={submitBlog}>\r\n            {({ values, handleSubmit, handleChange, errors }) => (\r\n              <form>\r\n                <TextField\r\n                  id=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  label=\"Title\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddBlog;\r\n","import { Scene } from \"react-scenejs\";\r\n\r\nconst UsingScene = () => {\r\n  const keyframes = {\r\n    \".circles .circle\": (i) => ({\r\n      0: {\r\n        \"border-width\": \"150px\",\r\n        opacity: 1,\r\n        transform: \"translate(-50%, -50%) scale(0)\",\r\n      },\r\n      1.5: {\r\n        \"border-width\": \"0px\",\r\n        opacity: 0.3,\r\n        transform: \"scale(0.7)\",\r\n      },\r\n      options: {\r\n        delay: i * 0.4,\r\n      },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Using Scene</h1>\r\n      <Scene\r\n        keyframes={keyframes}\r\n        easing=\"ease-in-out\"\r\n        fillMode=\"forwards\"\r\n        direcition=\"normal\"\r\n        iterationCount={1}\r\n        playSpeed={1}\r\n        delay={0}\r\n        time={0}\r\n        css={false}\r\n        autoplay={false}\r\n        ready={true}\r\n        onPlay={(e) => {\r\n          console.log(e);\r\n        }}\r\n        onPaused={(e) => {\r\n          console.log(e);\r\n        }}\r\n        onAnimate={(e) => {\r\n          console.log(e);\r\n        }}\r\n        onTimeUpdate={(e) => {\r\n          console.log(e);\r\n        }}\r\n        onIteration={(e) => {\r\n          console.log(e);\r\n        }}\r\n        onEnded={(e) => {\r\n          console.log(e);\r\n        }}\r\n      >\r\n        <div className=\"circles\">\r\n          <div className=\"circle circle1\"></div>\r\n          <div className=\"circle circle2\"></div>\r\n          <div className=\"circle circle3\"></div>\r\n        </div>\r\n      </Scene>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsingScene;\r\n","import { createTheme, ThemeProvider } from \"@mui/material\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Admin from \"./components/admin\";\nimport AdminDashboard from \"./components/admin/dashboard\";\nimport ManageUser from \"./components/admin/manageUser\";\nimport Profile from \"./components/profile\";\nimport Crud from \"./components/crud\";\nimport Header from \"./components/header\";\nimport Main from \"./components/main\";\nimport Login from \"./components/main/login\";\nimport Signup from \"./components/main/signup\";\nimport Manage from \"./components/manage\";\nimport User from \"./components/user\";\nimport AddBlog from \"./components/user/addBlog\";\nimport UsingScene from \"./components/usingScene\";\n\nfunction App() {\n  const theme1 = createTheme({\n    palette: {\n      // text: {\n      //   primary: \"#4d0fe9\",\n      // },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme1}>\n      <BrowserRouter>\n        <Routes>\n          <Route\n            element={\n              //   <CSSTransition\n              //   timeout={300}\n              //   classNames=\"page\"\n              //   unmountOnExit>\n              //     <Crud />\n              //   </CSSTransition>\n              <Crud />\n            }\n            path=\"/crud\"\n          />\n          <Route element={<Manage />} path=\"/manage\" />\n          <Route element={<UsingScene />} path=\"/scene\" />\n          <Route element={<Main />} path=\"main\">\n            <Route element={<Signup />} path=\"signup\" />\n            <Route element={<Login />} path=\"login\" />\n          </Route>\n\n          <Route element={<User />} path=\"user\">\n            <Route element={<AddBlog />} path=\"addblog\" />\n            <Route element={<Profile />} path=\"profile\" />\n          </Route>\n\n          <Route element={<Admin />} path=\"admin\">\n            <Route element={<Profile />} path=\"profile\" />\n            <Route element={<AdminDashboard />} path=\"dashboard\" />\n            <Route element={<ManageUser />} path=\"manageuser\" />\n            <Route path=\"admin\" element={<Navigate to=\"/admin/dashboard\" />} />\n          </Route>\n\n          <Route path=\"/\" element={<Navigate replace to=\"/main/login\" />} />\n          <Route\n            path=\"user\"\n            element={<Navigate replace to=\"/user/profile\" />}\n          />\n          <Route\n            path=\"admin\"\n            element={<Navigate replace to=\"/admin/profile\" />}\n          />\n          <Route path=\"login\" element={<Navigate replace to=\"/main/login\" />} />\n\n          <Route />\n        </Routes>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}